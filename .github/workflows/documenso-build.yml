name: Documenso Build

on:
  push:
    branches: ["workflow/prod-build"]
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v4

      - name: Check Docker availability
        run: docker version

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Determine version and Git SHA
        id: determine_version
        run: |
          APP_VERSION=$(jq -r '.version' "apps/web/package.json")
          GIT_SHA=$(git rev-parse HEAD)
          echo "App version: $APP_VERSION"
          echo "Git SHA: $GIT_SHA"
          echo "::set-output name=app_version::$APP_VERSION"
          echo "::set-output name=git_sha::$GIT_SHA"

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.determine_version.outputs.git_sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.determine_version.outputs.app_version }}

          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
